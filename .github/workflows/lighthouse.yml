# .github/workflows/lighthouse.yml
#
# Copyright Â© 2025 Network Pro Strategies (Network Proâ„¢)
# SPDX-License-Identifier: CC-BY-4.0 OR GPL-3.0-or-later
# This file is part of Network Pro

name: Lighthouse Audit

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow access to repo
permissions:
  contents: read

jobs:
  audit:
    name: Run Lighthouse CI
    runs-on: ubuntu-24.04
    env:
      ENV_MODE: ci
    timeout-minutes: 10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log ENV_MODE
        run: 'echo "ENV_MODE is set to: $ENV_MODE"'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          check-latest: true
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Upgrade npm
        run: |
          corepack enable
          npm install -g npm@11.4.0

      - name: Clean previous Lighthouse reports
        run: |
          if [ -d ".lighthouseci" ]; then
            COUNT=$(find .lighthouseci -type f | wc -l)
            echo "ðŸ§¹ Removing $COUNT file(s) from .lighthouseci/"
            rm -rf .lighthouseci
          else
            echo "ðŸ§¹ No previous .lighthouseci/ directory to clean."
          fi

      - name: Install Dependencies
        run: npm ci

      - name: Build Site
        run: npm run build

      - name: Install Google Chrome
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb

      - name: Record Chrome version and timestamp
        run: |
          mkdir -p .lighthouseci
          {
            echo "Chrome Version: $(google-chrome --version)"
            echo "Audit Timestamp: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          } > .lighthouseci/chrome-version.txt

      - name: Collect Lighthouse results
        run: |
          npx @lhci/cli collect \
            --chrome-path="$(which google-chrome)" \
            --config=.lighthouserc.cjs

      - name: Log Chrome version used
        run: cat .lighthouseci/chrome-version.txt

      #- name: Assert Lighthouse results (non-blocking)
      #  run: npx @lhci/cli assert --config=.lighthouserc.cjs
      #  continue-on-error: true

      - name: Assert Lighthouse results
        run: echo "Skipping LHCI assert step"

      - name: Upload Lighthouse results
        run: npx @lhci/cli upload --config=.lighthouserc.cjs

      - name: List contents of .lighthouseci
        run: ls -al .lighthouseci

      - name: Rename Lighthouse reports
        run: |
          mkdir -p .lighthouseci
          LATEST_JSON=$(ls -t .lighthouseci/*.json | head -n 1)
          LATEST_HTML=$(ls -t .lighthouseci/*.html | head -n 1)

          if [[ -f "$LATEST_JSON" && -f "$LATEST_HTML" ]]; then
            cp "$LATEST_HTML" .lighthouseci/report.html
            cp "$LATEST_JSON" .lighthouseci/report.json
          else
            echo "No Lighthouse report files found."
          fi

      - name: Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: |
            .lighthouseci/report.html
            .lighthouseci/report.json
            .lighthouseci/chrome-version.txt
          include-hidden-files: true
          if-no-files-found: ignore
